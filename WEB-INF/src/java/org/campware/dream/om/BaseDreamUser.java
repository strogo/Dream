package org.campware.dream.om;


import java.math.BigDecimal;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Date;
import java.util.Collections;
import java.util.List;

import org.apache.commons.lang.ObjectUtils;
import org.apache.torque.TorqueException;
import org.apache.torque.om.BaseObject;
import org.apache.torque.om.ComboKey;
import org.apache.torque.om.DateKey;
import org.apache.torque.om.NumberKey;
import org.apache.torque.om.ObjectKey;
import org.apache.torque.om.SimpleKey;
import org.apache.torque.om.StringKey;
import org.apache.torque.om.Persistent;
import org.apache.torque.util.Criteria;
import org.apache.torque.util.Transaction;


/**
 * This class was autogenerated by Torque on:
 *
 * [Thu Jul 29 08:38:49 CEST 2004]
 *
 * You should not use this class directly.  It should not even be
 * extended all references should be to DreamUser
 */
public abstract class BaseDreamUser extends BaseObject
{
    /** The Peer class */
    private static final DreamUserPeer peer =
        new DreamUserPeer();

                  
        /**
         * The value for the user_id field
         */
        private int user_id;
              
        /**
         * The value for the login_name field
         */
        private String login_name;
              
        /**
         * The value for the welcome field
         */
        private String welcome;
                                                                            
        /**
         * The value for the default_list field
         */
        private int default_list = 1000;
                                                                            
        /**
         * The value for the dinbox_fid field
         */
        private int dinbox_fid = 1000;
                                                                            
        /**
         * The value for the doutbox_fid field
         */
        private int doutbox_fid = 1000;
                                                                            
        /**
         * The value for the dnewsletter_fid field
         */
        private int dnewsletter_fid = 1000;
                                                                            
        /**
         * The value for the dreturn_fid field
         */
        private int dreturn_fid = 1000;
                                                                            
        /**
         * The value for the dshipment_fid field
         */
        private int dshipment_fid = 1000;
                                                                            
        /**
         * The value for the dorder_fid field
         */
        private int dorder_fid = 1000;
                                                                            
        /**
         * The value for the dcontract_fid field
         */
        private int dcontract_fid = 1000;
                                                                            
        /**
         * The value for the project_fid field
         */
        private int project_fid = 1000;
                                                                            
        /**
         * The value for the location_fid field
         */
        private int location_fid = 1000;
                                                                            
        /**
         * The value for the distributor_fid field
         */
        private int distributor_fid = 1000;
                                                                            
        /**
         * The value for the product_fid field
         */
        private int product_fid = 1000;
      
      
        /**
         * Get the UserId
         *
         * @return int
         */
        public int getUserId()
        {
            return user_id;
        }

                                            
        /**
         * Set the value of UserId
         *
         * @param v new value
         */
        public void setUserId(int v) 
        {
          


         if (this.user_id != v)
        {
             this.user_id = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the LoginName
         *
         * @return String
         */
        public String getLoginName()
        {
            return login_name;
        }

                                            
        /**
         * Set the value of LoginName
         *
         * @param v new value
         */
        public void setLoginName(String v) 
        {
          


         if (!ObjectUtils.equals(this.login_name, v))
        {
             this.login_name = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the Welcome
         *
         * @return String
         */
        public String getWelcome()
        {
            return welcome;
        }

                                            
        /**
         * Set the value of Welcome
         *
         * @param v new value
         */
        public void setWelcome(String v) 
        {
          


         if (!ObjectUtils.equals(this.welcome, v))
        {
             this.welcome = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DefaultList
         *
         * @return int
         */
        public int getDefaultList()
        {
            return default_list;
        }

                                            
        /**
         * Set the value of DefaultList
         *
         * @param v new value
         */
        public void setDefaultList(int v) 
        {
          


         if (this.default_list != v)
        {
             this.default_list = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DinboxFid
         *
         * @return int
         */
        public int getDinboxFid()
        {
            return dinbox_fid;
        }

                                            
        /**
         * Set the value of DinboxFid
         *
         * @param v new value
         */
        public void setDinboxFid(int v) 
        {
          


         if (this.dinbox_fid != v)
        {
             this.dinbox_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DoutboxFid
         *
         * @return int
         */
        public int getDoutboxFid()
        {
            return doutbox_fid;
        }

                                            
        /**
         * Set the value of DoutboxFid
         *
         * @param v new value
         */
        public void setDoutboxFid(int v) 
        {
          


         if (this.doutbox_fid != v)
        {
             this.doutbox_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DnewsletterFid
         *
         * @return int
         */
        public int getDnewsletterFid()
        {
            return dnewsletter_fid;
        }

                                            
        /**
         * Set the value of DnewsletterFid
         *
         * @param v new value
         */
        public void setDnewsletterFid(int v) 
        {
          


         if (this.dnewsletter_fid != v)
        {
             this.dnewsletter_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DreturnFid
         *
         * @return int
         */
        public int getDreturnFid()
        {
            return dreturn_fid;
        }

                                            
        /**
         * Set the value of DreturnFid
         *
         * @param v new value
         */
        public void setDreturnFid(int v) 
        {
          


         if (this.dreturn_fid != v)
        {
             this.dreturn_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DshipmentFid
         *
         * @return int
         */
        public int getDshipmentFid()
        {
            return dshipment_fid;
        }

                                            
        /**
         * Set the value of DshipmentFid
         *
         * @param v new value
         */
        public void setDshipmentFid(int v) 
        {
          


         if (this.dshipment_fid != v)
        {
             this.dshipment_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DorderFid
         *
         * @return int
         */
        public int getDorderFid()
        {
            return dorder_fid;
        }

                                            
        /**
         * Set the value of DorderFid
         *
         * @param v new value
         */
        public void setDorderFid(int v) 
        {
          


         if (this.dorder_fid != v)
        {
             this.dorder_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DcontractFid
         *
         * @return int
         */
        public int getDcontractFid()
        {
            return dcontract_fid;
        }

                                            
        /**
         * Set the value of DcontractFid
         *
         * @param v new value
         */
        public void setDcontractFid(int v) 
        {
          


         if (this.dcontract_fid != v)
        {
             this.dcontract_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the ProjectFid
         *
         * @return int
         */
        public int getProjectFid()
        {
            return project_fid;
        }

                                            
        /**
         * Set the value of ProjectFid
         *
         * @param v new value
         */
        public void setProjectFid(int v) 
        {
          


         if (this.project_fid != v)
        {
             this.project_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the LocationFid
         *
         * @return int
         */
        public int getLocationFid()
        {
            return location_fid;
        }

                                            
        /**
         * Set the value of LocationFid
         *
         * @param v new value
         */
        public void setLocationFid(int v) 
        {
          


         if (this.location_fid != v)
        {
             this.location_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the DistributorFid
         *
         * @return int
         */
        public int getDistributorFid()
        {
            return distributor_fid;
        }

                                            
        /**
         * Set the value of DistributorFid
         *
         * @param v new value
         */
        public void setDistributorFid(int v) 
        {
          


         if (this.distributor_fid != v)
        {
             this.distributor_fid = v;
            setModified(true);
        }

                  
                       }


        /**
         * Get the ProductFid
         *
         * @return int
         */
        public int getProductFid()
        {
            return product_fid;
        }

                                            
        /**
         * Set the value of ProductFid
         *
         * @param v new value
         */
        public void setProductFid(int v) 
        {
          


         if (this.product_fid != v)
        {
             this.product_fid = v;
            setModified(true);
        }

                  
                       }


 
        
        
    
     


    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
     *
     * @throws Exception
     */
    public void save() throws Exception
    {
             save(DreamUserPeer.getMapBuilder()
                .getDatabaseMap().getName());
     }

    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
     * Note: this code is here because the method body is
     * auto-generated conditionally and therefore needs to be
     * in this file instead of in the super class, BaseObject.
     *
     * @param dbName
     * @throws TorqueException
     */
    public void save(String dbName) throws TorqueException
    {
        Connection con = null;
         try
        {
            con = Transaction.begin(dbName);
            save(con);
            Transaction.commit(con);
        }
        catch(TorqueException e)
        {
            Transaction.safeRollback(con);
            throw e;
        }

     }

      /** flag to prevent endless save loop, if this object is referenced
        by another object which falls in this transaction. */
    private boolean alreadyInSave = false;
      /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.  This method
     * is meant to be used as part of a transaction, otherwise use
     * the save() method and the connection details will be handled
     * internally
     *
     * @param con
     * @throws TorqueException
     */
    public void save(Connection con) throws TorqueException
    {
        if (!alreadyInSave)
      {
        alreadyInSave = true;



  
        // If this object has been modified, then save it to the database.
        if (isModified())
        {
            if (isNew())
            {
                DreamUserPeer.doInsert((DreamUser) this, con);
                setNew(false);
            }
            else
            {
                DreamUserPeer.doUpdate((DreamUser) this, con);
            }
        }

              alreadyInSave = false;
      }
      }


                
    
    

        /**
     * Set the PrimaryKey using ObjectKey.
     *
     * @param  user_id ObjectKey
     */
    public void setPrimaryKey(ObjectKey key)
        
    {
                    setUserId(((NumberKey) key).intValue());
            }

    /**
     * Set the PrimaryKey using a String.
     *
     * @param key
     */
    public void setPrimaryKey(String key) 
    {
                    setUserId(Integer.parseInt(key));
            }


    /**
     * returns an id that differentiates this object from others
     * of its class.
     */
    public ObjectKey getPrimaryKey()
    {
        return SimpleKey.keyFor(getUserId());
    }

 

    /**
     * Makes a copy of this object.
     * It creates a new object filling in the simple attributes.
     * It then fills all the association collections and sets the
     * related objects to isNew=true.
     */
    public DreamUser copy() throws TorqueException
    {
        return copyInto(new DreamUser());
    }

    protected DreamUser copyInto(DreamUser copyObj) throws TorqueException
    {
        copyObj.setUserId(user_id);
        copyObj.setLoginName(login_name);
        copyObj.setWelcome(welcome);
        copyObj.setDefaultList(default_list);
        copyObj.setDinboxFid(dinbox_fid);
        copyObj.setDoutboxFid(doutbox_fid);
        copyObj.setDnewsletterFid(dnewsletter_fid);
        copyObj.setDreturnFid(dreturn_fid);
        copyObj.setDshipmentFid(dshipment_fid);
        copyObj.setDorderFid(dorder_fid);
        copyObj.setDcontractFid(dcontract_fid);
        copyObj.setProjectFid(project_fid);
        copyObj.setLocationFid(location_fid);
        copyObj.setDistributorFid(distributor_fid);
        copyObj.setProductFid(product_fid);

  copyObj.setNew(false);
      copyObj.setNew(true);

                      copyObj.setUserId(0);
                                                                            return copyObj;
    }

    /**
     * returns a peer instance associated with this om.  Since Peer classes
     * are not to have any instance attributes, this method returns the
     * same instance for all member of this class. The method could therefore
     * be static, but this would prevent one from overriding the behavior.
     */
    public DreamUserPeer getPeer()
    {
        return peer;
    }
}
